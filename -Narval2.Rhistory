panel.background = element_blank(),
axis.line = element_line(colour = "black"))
exp2_np_reslight_plot
ggplot(data = exp2_np_reslight_effect,
aes(x = shading,
y = predicted),
colour = subsidy)
exp2_np_reslight_effect
library(ggplot2)
source("R_code/functions.R")
# N:P ratios  --------
hist(exp2_center$np)
## Fit model
np_exp2_reslight <-
MCMCglmm::MCMCglmm(log(np) ~
shading*subsidy,
random = ~ week + cup_number,
family = "gaussian",
nitt = 100000,
burnin = 1000,
thin = 50,
data = exp2)
autocorr.diag(np_exp2_reslight$VCV)
## Test
summary(np_exp2_reslight)
exp2_np_reslight_effect <-
as.data.frame(ggeffects::ggpredict(np_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)) %>%
dplyr::rename(shading = x,
subsidy = group)
gplot(data = exp2_np_reslight_effect,
aes(x = shading,
y = predicted),
colour = subsidy)
ggplot(data = exp2_np_reslight_effect,
aes(x = shading,
y = predicted),
colour = subsidy) +
geom_point(size = 3,
aes(colour = subsidy),
position = position_dodge(0.5))
### Plot
exp2_np_reslight_plot <-
ggplot(data = exp2_np_reslight_effect,
aes(x = shading,
y = predicted),
colour = subsidy) +
geom_point(size = 3,
aes(colour = subsidy),
position = position_dodge(0.5)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high,
colour = subsidy),
width = 0.2,
position = position_dodge(0.5)) +
geom_jitter(data = exp2,
mapping = aes(x = shading,
y = np,
colour = subsidy),
alpha = 0.3) +
scale_y_continuous(trans = "log10") +
ggtitle("") +
xlab("Light exposure") +
scale_x_discrete(labels = c("Exposed", "Shaded")) +
ylab(expression(paste("N:P ratio in water"))) +
scale_color_manual(name = "Subsidy",
labels = c("Litter", "Litter + feces"),
values = c("tan1", "tan4")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
exp2_np_reslight_plot
ggplot(data = exp2_np_reslight_effect,
aes(x = shading,
y = predicted),
colour = subsidy) +
geom_point(size = 3,
aes(colour = subsidy),
position = position_dodge(0.5)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high,
colour = subsidy),
width = 0.2,
position = position_dodge(0.5))
### Plot
exp2_np_reslight_plot <-
ggplot(data = exp2_np_reslight_effect,
aes(x = shading,
y = predicted),
colour = subsidy) +
geom_point(size = 3,
aes(colour = subsidy),
position = position_dodge(0.5)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high,
colour = subsidy),
width = 0.2,
position = position_dodge(0.5)) +
geom_jitter(data = exp2,
mapping = aes(x = shading,
y = np,
colour = subsidy),
alpha = 0.3) +
scale_y_continuous(trans = "log10") +
ggtitle("") +
xlab("Light exposure") +
scale_x_discrete(labels = c("Exposed", "Shaded")) +
ylab(expression(paste("N:P ratio in water"))) +
scale_color_manual(name = "Subsidy",
labels = c("Litter", "Litter + feces"),
values = c("tan1", "tan4")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
# Step 1 - Effects of nonmoz treatments on nutrients, pH and T-----------------------------
# DIN
## Fit model
din_exp2_reslight <-
MCMCglmm::MCMCglmm(log(din + 0.01) ~
shading*subsidy,
random = ~ week + cup_number,
family = "gaussian",
nitt = 60000,
burnin = 5000,
thin = 25,
data = exp2)
## Check asssumptions
plot(din_exp2_reslight$Sol)
par(mar=c(0,0,0,0))
# Step 1 - Effects of nonmoz treatments on nutrients, pH and T-----------------------------
# DIN
## Fit model
din_exp2_reslight <-
MCMCglmm::MCMCglmm(log(din + 0.01) ~
shading*subsidy,
random = ~ week + cup_number,
family = "gaussian",
nitt = 60000,
burnin = 5000,
thin = 25,
data = exp2)
## Check asssumptions
plot(din_exp2_reslight$Sol)
autocorr.diag(din_exp2_reslight$VCV)
## Test
summary(din_exp2_reslight)
## Plot
{### Data
exp2_din_reslight_effect <-
as.data.frame(ggeffects::ggpredict(din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)) %>%
dplyr::rename(shading = x,
subsidy = group)
### Plot
exp2_din_reslight_plot <-
ggplot(data = exp2_din_reslight_effect,
aes(x = shading,
y = predicted),
colour = subsidy) +
geom_point(size = 3,
aes(colour = subsidy),
position = position_dodge(0.5)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high,
colour = subsidy),
width = 0.2,
position = position_dodge(0.5)) +
geom_jitter(data = exp2,
mapping = aes(x = shading,
y = din,
colour = subsidy),
alpha = 0.3) +
scale_y_continuous(trans = "log10") +
ggtitle("") +
xlab("Light exposure") +
scale_x_discrete(labels = c("Exposed", "Shaded")) +
ylab(expression(paste("DIN concentration (", mu, "mol"*".L"^"-1"*")"))) +
scale_color_manual(name = "Subsidy",
labels = c("Litter", "Litter + feces"),
values = c("tan1", "tan4")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
}
{### Data
exp2_din_reslight_effect <-
as.data.frame(ggeffects::ggpredict(din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)) %>%
dplyr::rename(shading = x,
subsidy = group)
### Plot
exp2_din_reslight_plot <-
ggplot(data = exp2_din_reslight_effect,
aes(x = shading,
y = predicted),
colour = subsidy) +
geom_point(size = 3,
aes(colour = subsidy),
position = position_dodge(0.5)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high,
colour = subsidy),
width = 0.2,
position = position_dodge(0.5)) +
geom_jitter(data = exp2,
mapping = aes(x = shading,
y = din,
colour = subsidy),
alpha = 0.3) +
scale_y_continuous(trans = "log10") +
ggtitle("") +
xlab("Light exposure") +
scale_x_discrete(labels = c("Exposed", "Shaded")) +
ylab(expression(paste("DIN concentration (", mu, "mol"*".L"^"-1"*")"))) +
scale_color_manual(name = "Subsidy",
labels = c("Litter", "Litter + feces"),
values = c("tan1", "tan4")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
}
## Plot
{### Data
exp2_din_reslight_effect <-
as.data.frame(ggeffects::ggpredict(din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)) %>%
dplyr::rename(shading = x,
subsidy = group)
### Plot
exp2_din_reslight_plot <-
ggplot(data = exp2_din_reslight_effect,
aes(x = shading,
y = predicted),
colour = subsidy) +
geom_point(size = 3,
aes(colour = subsidy),
position = position_dodge(0.5)) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high,
colour = subsidy),
width = 0.2,
position = position_dodge(0.5)) +
geom_jitter(data = exp2,
mapping = aes(x = shading,
y = din,
colour = subsidy),
alpha = 0.3) +
scale_y_continuous(trans = "log10") +
ggtitle("") +
xlab("Light exposure") +
scale_x_discrete(labels = c("Exposed", "Shaded")) +
ylab(expression(paste("DIN concentration (", mu, "mol"*".L"^"-1"*")"))) +
scale_color_manual(name = "Subsidy",
labels = c("Litter", "Litter + feces"),
values = c("tan1", "tan4")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
}
exp2_din_reslight_effect <-
as.data.frame(ggeffects::ggpredict(din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)) %>%
dplyr::rename(shading = x,
subsidy = group)
ggeffects::ggpredict(din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95))
ggeffects::ggpredict(din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)
din_exp2_reslight
## Check asssumptions
plot(din_exp2_reslight$Sol)
autocorr.diag(din_exp2_reslight$VCV)
## Test
summary(din_exp2_reslight)
library(ggeffects)
# Path analysis
# Load libraries
library(tidyverse)
library(here)
library(lme4)
library(MCMCglmm)
library(ggeffects)
library(DHARMa)
library(afex)
library(ggplot2)
source("R_code/functions.R")
# Load mosquito data
mozzies <-
read.csv(here::here("microchannels",
"appdata",
"mosquitoes.csv")) %>%
## Add average of two wings
dplyr::mutate(wing_length = (left_wing_mm + right_wing_mm)/2)
# Load chemical data
exp2 <-
read.csv(here::here("microchannels",
"appdata",
"weekly_measurements_exp2.csv")) %>%
## Make factors for models
dplyr::mutate(larvae = as.factor(larvae),
subsidy = as.factor(subsidy),
shading = as.factor(shading),
week = as.factor(week)) %>%
## Add DIN column
dplyr::mutate(din = nh4 +  no2 + no3) %>%
## Column with number of mosquitoes, 0 for absent and first week of present
dplyr::mutate(n_moz = ifelse(larvae == "absent",
0, ifelse(week == 0,
0,  6))) %>%
## Get cumulative number of dead or pupating mosquitoes each week
dplyr::left_join(mozzies %>%
dplyr::select(cup_number, week_of_departure) %>%
dplyr::group_by(cup_number, week_of_departure) %>%
dplyr::tally() %>%
dplyr::mutate(cumdeath = cumsum(n),
##ake negative to ignore nas later in sum function
cumdeath = -cumdeath) %>%
dplyr::ungroup() %>%
## if a mosquito dies a given week, only the next week measurement
## will have one less mosquito
dplyr::mutate(week = week_of_departure + 1,
week = as.factor(week)) %>%
dplyr::select(-n, - week_of_departure),
by = c("cup_number", "week")) %>%
## Now compute how many mosquitoes in a cup each week
dplyr::rowwise() %>%
dplyr::mutate(n_moz = sum(c(n_moz, cumdeath),
na.rm = TRUE)) %>%
dplyr::select(-cumdeath) %>%
## Lets not forget the misplaced one
dplyr::mutate(n_moz = ifelse(cup_number == 46 & week %in% c("1", "2"),
1, ifelse(cup_number == 46 & week == "3",
0, n_moz))) %>%
## Add N:P ratio
dplyr::mutate(np = din/po4)
# Scale data
exp2_center <-
exp2 %>%
## Center around 0
dplyr::bind_cols(
po4_scale = scale(exp2$po4),
nh4_scale = scale(exp2$nh4),
no2_scale = scale(exp2$no2),
no3_scale = scale(exp2$no3),
din_scale = scale(exp2$din),
chloro_scale = scale(exp2$chlorophyll_ugL),
bact_scale = scale(exp2$bact),
np_scale = scale(exp2$np)) %>%
## Remove all NAs
dplyr::filter(!is.na(nh4_scale) & !is.na(po4_scale) &
!is.na(no2_scale) & !is.na(no3_scale) &
!is.na(bact) & !is.na(chlorophyll_ugL))
# Step 1 - Effects of nonmoz treatments on nutrients, pH and T-----------------------------
# DIN
## Fit model
din_exp2_reslight <-
MCMCglmm::MCMCglmm(log(din + 0.01) ~
shading*subsidy,
random = ~ week + cup_number,
family = "gaussian",
nitt = 60000,
burnin = 5000,
thin = 25,
data = exp2)
## Check asssumptions
plot(din_exp2_reslight$Sol)
par(mar =c(0,0,0,0))
autocorr.diag(din_exp2_reslight$VCV)
## Test
summary(din_exp2_reslight)
exp2_din_reslight_effect <-
as.data.frame(ggeffects::ggpredict(din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)) %>%
dplyr::rename(shading = x,
subsidy = group)
ggeffects::ggpredict(din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)
?ggpredict
ggeffects::ggpredict(model = din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)
ggeffects::ggeffect(model = din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)
citation("ggeffects")
version
Sys.info()
installed.packages()
require(devtools)
remove.packages("ggeffects")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/ggeffects/ggeffects_1.1.2.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
# Path analysis
# Load libraries
library(tidyverse)
library(here)
library(lme4)
library(MCMCglmm)
library(ggeffects)
library(DHARMa)
library(afex)
library(ggplot2)
sessionInfo()
# Load mosquito data
mozzies <-
read.csv(here::here("microchannels",
"appdata",
"mosquitoes.csv")) %>%
## Add average of two wings
dplyr::mutate(wing_length = (left_wing_mm + right_wing_mm)/2)
# Load chemical data
exp2 <-
read.csv(here::here("microchannels",
"appdata",
"weekly_measurements_exp2.csv")) %>%
## Make factors for models
dplyr::mutate(larvae = as.factor(larvae),
subsidy = as.factor(subsidy),
shading = as.factor(shading),
week = as.factor(week)) %>%
## Add DIN column
dplyr::mutate(din = nh4 +  no2 + no3) %>%
## Column with number of mosquitoes, 0 for absent and first week of present
dplyr::mutate(n_moz = ifelse(larvae == "absent",
0, ifelse(week == 0,
0,  6))) %>%
## Get cumulative number of dead or pupating mosquitoes each week
dplyr::left_join(mozzies %>%
dplyr::select(cup_number, week_of_departure) %>%
dplyr::group_by(cup_number, week_of_departure) %>%
dplyr::tally() %>%
dplyr::mutate(cumdeath = cumsum(n),
##ake negative to ignore nas later in sum function
cumdeath = -cumdeath) %>%
dplyr::ungroup() %>%
## if a mosquito dies a given week, only the next week measurement
## will have one less mosquito
dplyr::mutate(week = week_of_departure + 1,
week = as.factor(week)) %>%
dplyr::select(-n, - week_of_departure),
by = c("cup_number", "week")) %>%
## Now compute how many mosquitoes in a cup each week
dplyr::rowwise() %>%
dplyr::mutate(n_moz = sum(c(n_moz, cumdeath),
na.rm = TRUE)) %>%
dplyr::select(-cumdeath) %>%
## Lets not forget the misplaced one
dplyr::mutate(n_moz = ifelse(cup_number == 46 & week %in% c("1", "2"),
1, ifelse(cup_number == 46 & week == "3",
0, n_moz))) %>%
## Add N:P ratio
dplyr::mutate(np = din/po4)
# Scale data
exp2_center <-
exp2 %>%
## Center around 0
dplyr::bind_cols(
po4_scale = scale(exp2$po4),
nh4_scale = scale(exp2$nh4),
no2_scale = scale(exp2$no2),
no3_scale = scale(exp2$no3),
din_scale = scale(exp2$din),
chloro_scale = scale(exp2$chlorophyll_ugL),
bact_scale = scale(exp2$bact),
np_scale = scale(exp2$np)) %>%
## Remove all NAs
dplyr::filter(!is.na(nh4_scale) & !is.na(po4_scale) &
!is.na(no2_scale) & !is.na(no3_scale) &
!is.na(bact) & !is.na(chlorophyll_ugL))
# Step 1 - Effects of nonmoz treatments on nutrients, pH and T-----------------------------
# DIN
## Fit model
din_exp2_reslight <-
MCMCglmm::MCMCglmm(log(din + 0.01) ~
shading*subsidy,
random = ~ week + cup_number,
family = "gaussian",
nitt = 60000,
burnin = 5000,
thin = 25,
data = exp2)
## Check asssumptions
plot(din_exp2_reslight$Sol)
autocorr.diag(din_exp2_reslight$VCV)
## Test
summary(din_exp2_reslight)
exp2_din_reslight_effect <-
as.data.frame(ggeffects::ggpredict(model = din_exp2_reslight,
terms = c("shading", "subsidy"),
type = "re",
ci.level = 0.95)) %>%
dplyr::rename(shading = x,
subsidy = group)
